{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyboardPress","event","setState","key","window","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,QAd9B,uDAKE,WACEC,OAAOC,iBAAiB,UAAWC,KAAKN,uBAN5C,kCASE,WACEI,OAAOG,oBAAoB,UAAWD,KAAKN,uBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,mBArBtB,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.905aa38e.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  pressedKey: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    window.addEventListener('keydown', this.handleKeyboardPress);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('keydown', this.handleKeyboardPress);\n  }\n\n  handleKeyboardPress = (event: KeyboardEvent): void => {\n    this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}